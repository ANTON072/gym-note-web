/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as ExercisesRouteRouteImport } from './routes/exercises.route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as ExercisesIndexRouteImport } from './routes/exercises.index'

const ExercisesRouteRoute = ExercisesRouteRouteImport.update({
  id: '/exercises',
  path: '/exercises',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ExercisesIndexRoute = ExercisesIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ExercisesRouteRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/exercises': typeof ExercisesRouteRouteWithChildren
  '/exercises/': typeof ExercisesIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/exercises': typeof ExercisesIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/exercises': typeof ExercisesRouteRouteWithChildren
  '/exercises/': typeof ExercisesIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/exercises' | '/exercises/'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/exercises'
  id: '__root__' | '/' | '/exercises' | '/exercises/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ExercisesRouteRoute: typeof ExercisesRouteRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/exercises': {
      id: '/exercises'
      path: '/exercises'
      fullPath: '/exercises'
      preLoaderRoute: typeof ExercisesRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/exercises/': {
      id: '/exercises/'
      path: '/'
      fullPath: '/exercises/'
      preLoaderRoute: typeof ExercisesIndexRouteImport
      parentRoute: typeof ExercisesRouteRoute
    }
  }
}

interface ExercisesRouteRouteChildren {
  ExercisesIndexRoute: typeof ExercisesIndexRoute
}

const ExercisesRouteRouteChildren: ExercisesRouteRouteChildren = {
  ExercisesIndexRoute: ExercisesIndexRoute,
}

const ExercisesRouteRouteWithChildren = ExercisesRouteRoute._addFileChildren(
  ExercisesRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ExercisesRouteRoute: ExercisesRouteRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
